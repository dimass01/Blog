<?php

namespace Sdz\Bundle\BlogBundle\Entity;
use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\ORM\Mapping as ORM;

/**
 * Image
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="Sdz\Bundle\BlogBundle\Entity\ImageRepository")
 * @ORM\HasLifecycleCallbacks()
 */
class Image
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="extension", type="string", length=255)
     */
    private $extension;

    /**
     * @var string
     *
     * @ORM\Column(name="alt", type="string", length=255)
     */
    private $alt;

    private $file;

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }



    /**
     * Set alt
     *
     * @param string $alt
     * @return Image
     */
    public function setAlt($alt)
    {
        $this->alt = $alt;

        return $this;
    }

    /**
     * Get alt
     *
     * @return string 
     */
    public function getAlt()
    {
        return $this->alt;
    }
    
    
    public function getFile()
{
    return $this->file;
}

    public function setFile($file)
{
        $this->file = $file;
        return $this;
}
    


    /**
    * @ORM\PrePersist
    * @ORM\PreUpdate
    */

   public function preUpload()
   {
    // Si jamais il n'y a pas de fichier (champ facultatif)
    if (null === $this->file) {
      return;
    }
    // On sauvegarde le nom de fichier dans notre attribut $url
    $this->url = $this->getUploadDir()."/".$this->getImageFilename();
    // On crée également le futur attribut alt de notre balise <img>
    $this->alt = $this->getImageFilename();
   }

    public function getImageFilename()
    {
        // On garde le nom original du fichier de l'internaute
        $extension = $this->file->getClientOriginalExtension();
        $filename =$this->id;
        return $filename.".".$extension;
    }
   
 /**
    * @ORM\PostPersist
    * @ORM\PostUpdate
    */
   public function upload()
  {
    // On déplace le fichier envoyé dans le répertoire de notre choix
    $this->file->move($this->getUploadRootDir(), $this->getImageFilename());
  
  }
  public function getUploadDir()
  {
    // On retourne le chemin relatif vers l'image pour un navigateur
    return 'uploads/img';
  }
  protected function getUploadRootDir()
  {
    // On retourne le chemin relatif vers l'image pour notre code PHP
    return __DIR__.'/../../../../../web/'.$this->getUploadDir();
  }
}
